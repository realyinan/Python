# 1. 函数定义时的 * 和 **
# 作用：用来定义可以接收不定长参数的函数。

def func(*args, **kwargs):
    print("位置参数:", args)
    print("关键字参数:", kwargs)

# *args：
# 收集所有多余的位置参数，并将它们打包成一个元组。
# 例如：func(1, 2, 3)，args 会是 (1, 2, 3)。

# **kwargs：
# 收集所有多余的关键字参数，并将它们打包成一个字典。
# 例如：func(a=10, b=20)，kwargs 会是 {'a': 10, 'b': 20}。

# 2. 函数调用时的 * 和 **
# 作用：用来解包可迭代对象或字典，将其转化为独立的位置参数或关键字参数。

tuple1 = (1, 2, 3)
dict1 = {"a": 10, "b": 20}

func(*tuple1, **dict1)

# *tuple1：
# 将元组 tuple1 中的元素解包为位置参数，相当于：func(1, 2, 3, ...)。

# **dict1：
# 将字典 dict1 中的键值对解包为关键字参数，相当于：func(a=10, b=20, ...)。
